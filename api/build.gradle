plugins {
        id 'java'
        id 'org.springframework.boot' version '3.5.0'
        id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
        toolchain {
                languageVersion = JavaLanguageVersion.of(17)
        }
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
}

configurations {
        compileOnly {
                extendsFrom annotationProcessor
        }
}

repositories {
        mavenCentral()
        maven { url 'https://jitpack.io'}
}

ext {
        set('springAiVersion', "1.0.0")
}

dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'com.github.typesense:typesense-java:0.2.0'
        implementation 'org.springframework.boot:spring-boot-starter-freemarker'
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        implementation 'com.twilio.sdk:twilio:10.9.2'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
        implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
//      implementation 'org.springframework.ai:spring-ai-starter-vector-store-typesense'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.mysql:mysql-connector-j'
        implementation 'org.springframework.security:spring-security-crypto'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
        imports {
                mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        }
}

tasks.named('test') {
        useJUnitPlatform()
}
